        -:    0:Source:cardtest1.c
        -:    0:Graph:cardtest1.gcno
        -:    0:Data:cardtest1.gcda
        -:    0:Runs:2
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include <stdio.h>
        -:    3:#include "rngs.h"
        -:    4:#include <stdlib.h>
        -:    5:
        -:    6://gcc -fprofile-arcs -ftest-coverage -Wall -std=c99 dominion.c cardtest1.c rngs.c -o cardtest1 -lm -g
        -:    7:
        -:    8://ZDI assert is a function that receives a integer and a character.
        -:    9:// It checks if the integer is one or 2, if it is one that means the test Passed.
        -:   10:// If the integer is 2 it means the test failed
        -:   11:int zdi_assert(int a, char * string)
        -:   12:{
        2:   13:  if(a == 1) // 1 == passed
        -:   14:  {
        2:   15:    printf("Test Passed: \t %s \n\n\n", string);
        2:   16:    return 0;
        -:   17:  }
    #####:   18:  else if( a == 2) // 2 == failed
        -:   19:  {
    #####:   20:    printf("Test Failed: \t %s\n\n\n", string);
    #####:   21:  }
    #####:   22:  return 0;
        -:   23:
        2:   24:}
        -:   25:
        -:   26:// Main
        -:   27:int main()
        -:   28:{
        -:   29:  int a, b;
        2:   30:  int randomSeed = 10;
        -:   31:  struct gameState game;
        2:   32:  printf("\nCard Test 1\n-----------\n");
        2:   33:  int cards[10] = {adventurer, gardens, embargo, village, minion, mine, cutpurse, sea_hag, tribute, smithy};
        -:   34:
        2:   35:  a = initializeGame(2,cards, randomSeed, &game); // intiiliaze the game
        -:   36:
        2:   37:  b = cardEffect(adventurer, 0, 0, 0, &game, 0, 0); // call cardeffect function with adventurere
        -:   38:
        2:   39:  if(b == 0) // 0 means test passed 
        -:   40:  {
        2:   41:    zdi_assert(1, "Card Effect - Adventurer");
        2:   42:  }
        -:   43:  else
        -:   44:  {
    #####:   45:    zdi_assert(2, "Card Effect - Adventurer");
        -:   46:
        -:   47:  }
        -:   48:
        2:   49:return 0;
        -:   50:}
